@page "/register"
@inject ILocalStorageService LocalStorage
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="user" OnSubmit="HandleRegister">
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" type="email"></InputText>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>
    <span class="text-danger">@message</span>
@code {
    private AuthRegisterDto user = new AuthRegisterDto();
    private string message = "";
    private async void HandleRegister()
    {
        if (user.Password != user.ConfirmPassword)
        {
            message = "Passwords do not match";
            return;
        }

        var response = await AuthService.Register(user);
        if (response == false)
        {
            message = "Error during registration try again";
        }
        else
        {
            NavigationManager.NavigateTo("login");
        }
    }

}
